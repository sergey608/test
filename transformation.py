# Лямбда-выражение, которое возвращает свой аргумент без изменений
transformation = lambda x: x

# Список значений
values = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]

# Применяем функцию transformation к каждому значению в списке values
transformed_values = list(map(transformation, values))

# Выводим получившийся список
print(transformed_values)
'''
Ваша задача - получить список значений как есть, не применяя никаких преобразований. Это можно сделать, задав функцию transformation как идентичную функцию, то есть функцию, которая возвращает свой аргумент без изменений.

В Python, функцию, которая возвращает свой аргумент без изменений, можно определить с помощью лямбда-выражения. Лямбда-выражение - это способ определения коротких, анонимных функций. В данном случае, вам нужно определить лямбда-выражение, которое принимает один аргумент и возвращает его же. Это можно сделать так: lambda x: x.

Теперь, когда у вас есть функция transformation, вы можете применить ее к каждому элементу списка values с помощью функции map. Функция map принимает функцию и итерируемый объект (например, список), и возвращает новый итерируемый объект, где каждый элемент является результатом применения функции к соответствующему элементу исходного объекта.

В итоге, transformed_values будет точной копией values, потому что каждое значение из values будет просто скопировано в transformed_values, без каких-либо преобразований. Это и есть ответ на вашу задачу.

'''