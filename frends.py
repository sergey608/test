# Функция для вычисления суммы делителей числа
def sum_of_divisors(n):
    divisors_sum = 1  # Начинаем с 1, так как 1 - это делитель любого числа
    # Перебираем возможные делители от 2 до корня из n
    for i in range(2, int(n**0.5) + 1):
        # Если число делится на i без остатка, то i - делитель
        if n % i == 0:
            divisors_sum += i  # Добавляем i в сумму делителей
            # Если n / i не равно i, то n / i - это еще один делитель
            if n // i != i:
                divisors_sum += n // i  # Добавляем n / i в сумму делителей
    return divisors_sum  # Возвращаем сумму делителей

# Функция для поиска дружественных чисел до заданного числа k
def find_friendly_numbers(k):
    friendly_pairs = []  # Список для хранения пар дружественных чисел
    # Перебираем все числа от 1 до k
    for n in range(1, k+1):
        m = sum_of_divisors(n)  # Вычисляем сумму делителей числа n
        # Если m <= k, n != m и сумма делителей m равна n, то n и m - дружественные числа
        if m <= k and n != m and sum_of_divisors(m) == n:
            # Если пара (m, n) еще не в списке, добавляем ее
            if (m, n) not in friendly_pairs:
                friendly_pairs.append((n, m))
    # Выводим все найденные пары дружественных чисел
    for pair in friendly_pairs:
        print(pair[0], pair[1])

# Запрашиваем у пользователя число k
k = int(input("Введите число k: "))
# Вызываем функцию для поиска дружественных чисел
find_friendly_numbers(k)
